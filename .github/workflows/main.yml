name: ‚ú® Deploy to production

on:
    push:
        branches:
            - main

jobs:
    build:
        name: üê≥ build and push docker image
        runs-on: ubuntu-latest
        environment: production
        timeout-minutes: 5
        steps:
            - name: ü´† Checkout repository
              uses: actions/checkout@v2

            - name: üèóÔ∏è Set up Bun
              uses: oven-sh/setup-bun@v2
               
            - name: Install dependencies
              run: bun install

            # - name: Build and test
            #   run: bun test
            
            - name: Set up environment variables
              env:
                REDIS_URL: ${{ secrets.MY_ENV_VAR }}
              run: echo "Environment variables set up"
        
            - name: login to docker
              uses: docker/login-action@v2
              with:
                  username: ${{secrets.DOCKER_USERNAME}}
                  password: ${{secrets.DOCKER_PASSWORD}}

            - name: üèóÔ∏è Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: ‚òÅÔ∏è Build and push
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_IMAGE}}:latest
                  build-args: |
                      REDIS_URL=${{ secrets.MY_ENV_VAR }}

    deploy:
        name: üñ•Ô∏è deploy to server
        runs-on: ubuntu-latest
        environment: production
        timeout-minutes: 5
        needs: [build]
        steps:
            - name: remote ssh
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  password: ${{ secrets.SSH_PASSWORD }}
                  script: |
                      docker pull ${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_IMAGE}}:latest
                      docker stop ${{secrets.CONTAINER_NAME}}
                      docker rm ${{secrets.CONTAINER_NAME}}
                      docker run -d \
                      --name ${{secrets.CONTAINER_NAME}} \
                      -p ${{secrets.DOCKER_PORT}}:3000 \
                      --env REDIS_URL=${{secrets.REDIS_URL}} \
                      --env DATABASE_URL=${{secrets.DATABASE_URL}} \
                      --env JWT_SECRET=${{secrets.JWT_SECRET}} \
                      ${{secrets.DOCKER_REGISTRY}}/${{secrets.DOCKER_IMAGE}}:latest
                      docker system prune -af
